/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/op/v0/plant/create": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Information of modules (needed for creating pv/energy-storage power station) */
            devices?: {
              /** @description Serial number of module */
              sn?: string;
              key?: string;
            }[];
            /** @description Charge pile's serial number (needed for charge pile power station) */
            pileSN?: string;
            /** @description Details of power station */
            details: {
              /** @description Name of power station */
              name: string;
              /** @description Type of power station (1-pv power station,2-energy-storage power station,3-charge-pile power station,4-mini-device power station) */
              type: number;
              /** @description Country's code of power station (Two-bit code, such as China is \"CN\",Reference address: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) */
              countryCode: string;
              /** @description City */
              city: string;
              /** @description Address */
              address: string;
              /** @description Postcode */
              postcode: string;
              /** @description Electric price of power station (needed for creating pv/energy-storage/mini-device power station) */
              price?: number;
              /** @description The currency of electricity price measurement (needed for editing pv/energy-storage/mini-device power station, reference: U.S. dollar-USD($), Euro-EUR(€), Vietnamese Dong-VND(D.), RMB-CNY(¥), Pound sterling-GBP(￡), Australian dollar-AUD($), Poland-PLN(Zł), India-INR(₹), Brazil-BRL(R$), S.Africa-ZAR(R), THB (THB)-THB(฿), Pakistani rupee-PKR(Rs)) */
              currency?: string;
              /** @description System's capacity of power station (needed for creating pv/energy-storage/mini-device power station) */
              systemCapacity?: number;
            };
            /** @description Detailed time zone in English (\"district\"+\"/\"+\"country\", such as: Asia/Shanghai, Reference address: https://nodatime.org/TimeZones) */
            timezone: string;
            /** @description Coordinate information */
            position?: {
              /** @description Coordinate address */
              format?: string;
              /** @description Longitude */
              x?: string;
              /** @description Latitude */
              y?: string;
              /** @description Ip of address */
              pid?: string;
            };
            /** @description Serial number of electricmeter (needn't if empty) */
            electricmeterSN?: string;
            /** @description Information of mini-device (needed for creating mini-device power station) */
            layoutByMini?: {
              /** @description Component layout (1-portrait, 2-crosswise) */
              direction?: number;
              arrange?: {
                /** @description Serial number of module (needed for creating mini-device power station) */
                sn?: string;
                /** @description Horizontal number (needed for creating mini-device power station) */
                horizontal?: number;
                /** @description Vertical number (needed for creating mini-device power station) */
                vertical?: number;
                /** @description Azimuth angle (needed for creating mini-device power station, between 0 and 360°) */
                azimuth?: number;
                /** @description Angle of inclination (needed for creating mini-device power station, between 0 and 90°) */
                dipAngle?: number;
                /** @description Direction ( needed for creating mini-device power station, 1-vertical, 2-horizontal) */
                direction?: number;
                /** @description Component capacity (needed for creating mini-device power station) */
                capacity?: number;
                /** @description Component type (needed for creating mini-device power station) */
                model?: string;
              }[];
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno?: number;
              result?: {
                /** @description Id of power station */
                stationID?: string;
                /** @description Information of module */
                devices?: {
                  device?: {
                    /** @description Snserial number of module */
                    sn?: string;
                    key?: string;
                  };
                  /** @description Error number of module (when the result is not equal to zero, the serial number cannt meet the requirements) */
                  errno?: number;
                }[];
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/plant/delete": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Id of power station */
            stationID: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/plant/update": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Information of modules (needed for editing pv/energy-storage power station) */
            devices?: {
              /** @description Serial number of module */
              sn?: string;
              key?: string;
            }[];
            /** @description Charge pile's serial number (needed for charge pile power station) */
            pileSN?: string;
            /** @description Details of power station */
            details: {
              /** @description Name of power station */
              name: string;
              /** @description Type of power station (1-pv power station,2-energy-storage power station,3-charge-pile power station,4-mini-device power station) */
              type: number;
              /** @description Country's code of power station (Two-bit code, such as China is \"CN\",Reference address: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) */
              countryCode: string;
              /** @description City */
              city: string;
              /** @description Address */
              address: string;
              /** @description Postcode */
              postcode: string;
              /** @description Electric price of power station (needed for editing pv/energy-storage/mini-device power station) */
              price?: number;
              /** @description The currency of electricity price measurement (needed for editing pv/energy-storage/mini-device power station, reference: U.S. dollar-USD($), Euro-EUR(€), Vietnamese Dong-VND(D.), RMB-CNY(¥), Pound sterling-GBP(￡), Australian dollar-AUD($), Poland-PLN(Zł), India-INR(₹), Brazil-BRL(R$), S.Africa-ZAR(R), THB (THB)-THB(฿), Pakistani rupee-PKR(Rs)) */
              currency?: string;
              /** @description Id of power station */
              stationID: string;
              /** @description System's capacity of power station (needed for editing pv/energy-storage/mini-device power station) */
              systemCapacity?: number;
            };
            /** @description Detailed time zone in English (\"district\"+\"/\"+\"country\", such as: Asia/Shanghai, Reference address: https://nodatime.org/TimeZones) */
            timezone: string;
            /** @description Coordinate information */
            position?: {
              /** @description Coordinate address */
              format?: string;
              /** @description Longitude */
              x?: string;
              /** @description Latitude */
              y?: string;
              /** @description Ip of address */
              pid?: string;
            };
            /** @description Serial number of electricmeter (needn't if empty) */
            electricmeterSN?: string;
            /** @description Information of mini-device (needed for editing mini-device power station) */
            layoutByMini?: {
              /** @description Component layout (1-portrait, 2-crosswise) */
              direction?: number;
              arrange?: {
                /** @description Serial number of module */
                sn?: string;
                /** @description Horizontal number */
                horizontal?: number;
                /** @description Vertical number */
                vertical?: number;
                /** @description Azimuth angle(between 0 and 360°) */
                azimuth?: number;
                /** @description Angle of inclination (between 0 and 90°) */
                dipAngle?: number;
                /** @description Direction (1-vertical, 2-horizontal) */
                direction?: number;
                /** @description Component capacity */
                capacity?: number;
                /** @description Component type */
                model?: string;
              }[];
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno?: number;
              result?: {
                /** @description Id of power station */
                stationID?: string;
                /** @description Information of module */
                devices?: {
                  device?: {
                    /** @description Serial number of module */
                    sn?: string;
                    key?: string;
                  };
                  /** @description Error number of module (when the result is not equal to zero, the serial number cannt meet the requirements) */
                  errno?: number;
                }[];
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/plant/detail": {
    get: {
      parameters: {
        query: {
          /** @description Id of power station */
          id: string;
        };
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Name of power station */
                stationName: string;
                /** @description Country of power station */
                country: string;
                /** @description City of power station */
                city: string;
                /** @description Address of power station */
                address: string;
                /** @description Create time,millisecond timestamp */
                createDate: string;
                /** @description Postcode of power station */
                postcode: string;
                /** @description Installed capacity (Unit kw) */
                capacity: number;
                /** @description Time zone of power station */
                timezone: string;
                /** @description User information */
                user: {
                  /** @description Name of user */
                  name: string;
                  /** @description Email of user */
                  email: string;
                  /** @description Phone of user */
                  phone: string;
                };
                /** @description Installer information */
                installer: {
                  /** @description Name of Installer */
                  name: string;
                  /** @description Email of Installer */
                  email: string;
                  /** @description Phone of Installer */
                  phone: string;
                };
              };
            };
          };
        };
      };
    };
    parameters: {
      query: {
        /** @description Id of power station */
        id: string;
      };
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/plant/list": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /**
             * @description Current page number
             * @default 1
             */
            currentPage: number;
            /**
             * @description The amount of data presented per page
             * @default 10
             */
            pageSize: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                data: {
                  /** @description Id of power station */
                  stationID: string;
                  /** @description Name of power station */
                  name: string;
                  /** @description Timezone of power station */
                  ianaTimezone: string;
                }[];
                /** @description Current page number */
                currentPage: number;
                /** @description The amount of data presented per page */
                pageSize: number;
                /** @description Data volume total */
                total: number;
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/list": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /**
             * @description Current page number
             * @default 1
             */
            currentPage: number;
            /**
             * @description The amount of data presented per page
             * @default 10
             */
            pageSize: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Current page number */
                currentPage: number;
                /** @description The amount of data presented per page */
                pageSize: number;
                /** @description Data volume total */
                total: number;
                data: {
                  /** @description Serial number of the inverter */
                  deviceSN: string;
                  /** @description Serial number of the Data Logger */
                  moduleSN: string;
                  /** @description Id of power station */
                  plantID: string;
                  /** @description Status of module */
                  status: number;
                  /** @description Is there a photovoltaic system available */
                  hasPV: boolean;
                  /** @description Is there a battery available */
                  "��─ hasBattery": boolean;
                  /** @description Type of device */
                  deviceType: string;
                  /** @description Type of product */
                  productType: string;
                  /** @description Name of power station */
                  stationName: string;
                }[];
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/detail": {
    get: {
      parameters: {
        query: {
          /** @description Serial number of Inverter */
          sn: string;
        };
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Serial number of the inverter */
                deviceSN: string;
                /** @description Serial number of the collector */
                moduleSN: string;
                /** @description Id of power station */
                stationID: string;
                /** @description Name of power station */
                stationName: string;
                /** @description Version of afci */
                afciVersion: string;
                /** @description Version of manager */
                managerVersion: string;
                /** @description Version of master */
                masterVersion: string;
                /** @description Version of slave */
                slaveVersion: string;
                /** @description Version of hardware */
                hardwareVersion: string;
                /** @description Status of device */
                status: number;
              };
            };
          };
        };
      };
    };
    parameters: {
      query: {
        /** @description Serial number of Inverter */
        sn: string;
      };
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/variable/get": {
    get: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              errno: number;
              result: {
                "{variable}": {
                  /** @description unit */
                  unit: string;
                  /** @description variable name */
                  name: {
                    zh_CN: string;
                    en: string;
                    de: string;
                    pt: string;
                    fr: string;
                    pl: string;
                  };
                };
              }[];
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/real/query": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description If this parameter is not passed, all variable data is obtained by default item type: string */
            variables?: string[];
            /** @description Serial Number of Inverter If no parameter is specified, all devices are obtained */
            sn?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              errno: number;
              result: {
                /** @description Serial Number of Inverter */
                deviceSN: string;
                datas: {
                  /** @description Variable name If the data is not found, it will not be returned */
                  variable: string;
                  /** @description Unit */
                  unit: string;
                  /** @description Name in English */
                  name: string;
                  /** @description Value */
                  value: number;
                }[];
                /** @description Time of Data Update, utc time */
                time: string;
              }[];
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/history/query": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description If this parameter is not passed, all variable data is obtained by default */
            variables?: string[];
            /** @description Serial Number of Inverter */
            sn: string;
            /** @description Start timestamp(milliseconds) */
            begin?: number;
            /** @description End timestamp(milliseconds) */
            end?: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              errno: number;
              result: {
                /** @description Serial Number of Inverter */
                deviceSN: string;
                datas: {
                  /** @description Variable name */
                  variable: string;
                  /** @description Unit of variable */
                  unit: string;
                  /** @description Name in English */
                  name: string;
                  data: {
                    /** @description Value */
                    value: number;
                    /** @description Time of Data Update, utc time */
                    time: string;
                  }[];
                }[];
              }[];
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/report/query": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Serial number of the inverter */
            sn: string;
            /** @description year */
            year: number;
            /** @description month */
            month?: number;
            /** @description day */
            day?: number;
            /** @description Statistical dimension */
            dimension: string;
            /** @description Query variable */
            variables: string[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Variable name */
                variable: string;
                /** @description Variable unit */
                unit: string;
                /** @description Variable value */
                values: number[];
              }[];
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/generation": {
    get: {
      parameters: {
        query: {
          /** @description Serial number of inverter */
          sn: string;
        };
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Electricity generation of this today unit:kWh */
                today: number;
                /** @description Electricity generation of this month unit:kWh */
                month: number;
                /** @description Cumulative power generation unit:kWh */
                cumulative: number;
              };
            };
          };
        };
      };
    };
    parameters: {
      query: {
        /** @description Serial number of inverter */
        sn: string;
      };
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/battery/soc/get": {
    get: {
      parameters: {
        query: {
          /** @description Serial number of Inverter */
          sn: string;
        };
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Minimum soc of system */
                minSoc: number;
                /** @description Minimum soc in grid-connected mode */
                minSocOnGrid: number;
              };
            };
          };
        };
      };
    };
    parameters: {
      query: {
        /** @description Serial number of Inverter */
        sn: string;
      };
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/battery/soc/set": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /** @description Language */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Serial number of inverter */
            sn: string;
            /** @description Minimum soc of system */
            minSoc: number;
            /** @description Minimum soc in grid-connected mode */
            minSocOnGrid: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: Record<string, never>;
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /** @description Language */
        lang: string;
      };
    };
  };
  "/op/v0/device/battery/forceChargeTime/get": {
    get: {
      parameters: {
        query: {
          /** @description Serial number of inverter */
          sn: string;
        };
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Whether the first segment is enabled */
                enable1: string;
                /** @description The first period starts time */
                startTime1: {
                  hour: number;
                  minute: number;
                };
                /** @description The end time of the first period */
                endTime1: {
                  hour: number;
                  minute: number;
                };
                /** @description Whether the second segment is enabled or not */
                enable2: string;
                /** @description The second period starts time */
                startTime2: {
                  hour: number;
                  minute: number;
                };
                /** @description The end time of the second period */
                endTime2: {
                  hour: number;
                  minute: number;
                };
              };
            };
          };
        };
      };
    };
    parameters: {
      query: {
        /** @description Serial number of inverter */
        sn: string;
      };
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/battery/forceChargeTime/set": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Serial number of Inverter */
            sn: string;
            /** @description Whether the first segment is enabled */
            enable1: boolean;
            /** @description Whether the second segment is enabled or not */
            enable2: boolean;
            /** @description The first period starts time */
            startTime1: {
              hour: number;
              minute: number;
            };
            /** @description The end time of the first period */
            endTime1: {
              hour: number;
              minute: number;
            };
            /** @description The second period starts time */
            startTime2: {
              hour: number;
              minute: number;
            };
            /** @description The end time of the second period */
            endTime2: {
              hour: number;
              minute: number;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: Record<string, never>;
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/scheduler/get/flag": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Serial number of device */
            deviceSN: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              /** @description Error message */
              msg: string;
              result: {
                /** @description Whether the timing function is supported(0:nonsupport 1:support) 0:nonsupport 1:support */
                support: number;
                /** @description Whether to enable the timing function(0:disable 1:enable) 0:disable 1:enable */
                enable: number;
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/scheduler/get": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Serial number of device */
            deviceSN: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description error number (When the result is not equal to zero, the request fails) */
              errno: number;
              /** @description Error message */
              msg: string;
              result: {
                /** @description State of master switch (0:off 1:on) */
                enable: string;
                groups: {
                  /** @description Whether to enable this group setting(0:disable 1:enable) */
                  enable: number;
                  /** @description Start time - hour(The value is between 0 and 23) */
                  startHour: number;
                  /** @description Start time - minute(The value is between 0 and 59) */
                  startMinute: number;
                  /** @description Ending time - hour(The value is between 0 and 23) */
                  endHour: number;
                  /** @description Ending time - minute(The value is between 0 and 59) */
                  endMinute: number;
                  /** @description Working mode (SelfUse, Feedin, Backup, ForceCharge, ForceDischarge) */
                  workMode: string;
                  /** @description socThe minimum soc value of the offline battery */
                  minSocOnGrid: number;
                  /** @description Discharge soc value */
                  fdSoc: number;
                  /** @description The maximum discharge power value */
                  fdPwr: number;
                }[];
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/scheduler/set/flag": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Serial number of device */
            deviceSN: string;
            /** @description Whether the switch is on 0:disable 1:enable */
            enable: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              /** @description Error message */
              msg: string;
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/device/scheduler/enable": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Serial number of device */
            deviceSN: string;
            groups: {
              /** @description Whether to enable this group setting(0:disable 1:enable) */
              enable: number;
              /** @description Start time - hour(The value is between 0 and 23) */
              startHour: number;
              /** @description Start time - minute(The value is between 0 and 59) */
              startMinute: number;
              /** @description Ending time - hour(The value is between 0 and 23) */
              endHour: number;
              /** @description Ending time - minute(The value is between 0 and 59) */
              endMinute: number;
              /** @description Working mode (SelfUse, Feedin, Backup, ForceCharge, ForceDischarge) */
              workMode: string;
              /** @description The minimum soc range of the offline battery is between 10 and 100 */
              minSocOnGrid: number;
              /** @description Discharge soc range between 0 and 100,value of fdsoc must be equal or greater than minSocOnGrid value of fdsoc must be equal or greater than minSocOnGrid */
              fdSoc: number;
              /** @description The maximum discharge power ranges between 0 and 6000 */
              fdPwr: number;
            }[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              /** @description Error message */
              msg: string;
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/module/list": {
    post: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /**
             * @description Current page number
             * @default 1
             */
            currentPage: number;
            /**
             * @description The amount of data presented per page
             * @default 10
             */
            pageSize: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Current page number */
                currentPage: number;
                /** @description The amount of data presented per page */
                pageSize: number;
                /** @description Data volume total */
                total: number;
                data: {
                  /** @description Serial number of Data Logger */
                  moduleSN: string;
                  /** @description Id of power station */
                  stationID: string;
                  /** @description Status of collector */
                  status: number;
                  /** @description Signal strength */
                  signal: number;
                }[];
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
  "/op/v0/user/getAccessCount": {
    get: {
      parameters: {
        header: {
          "Content-Type": string;
          /** @description Generate apikey from the API management function of the platform */
          token: string;
          /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
          signature: string;
          /** @description Current timestamp */
          timestamp: string;
          /**
           * @description Language
           * @example en
           */
          lang: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @description Error number (When the result is not equal to zero, the request fails) */
              errno: number;
              result: {
                /** @description Number of total times that the user can access the open interface */
                total: string;
                /** @description Number of remaining times that the user can access the open interface */
                remaining: string;
              };
            };
          };
        };
      };
    };
    parameters: {
      header: {
        "Content-Type": string;
        /** @description Generate apikey from the API management function of the platform */
        token: string;
        /** @description Signature rule: Encrypt the string url + \"\\r\\n\" + token + \"\\r\\n\" + timestamp with md5 */
        signature: string;
        /** @description Current timestamp */
        timestamp: string;
        /**
         * @description Language
         * @example en
         */
        lang: string;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
